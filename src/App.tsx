// src/App.tsx
import React, { useEffect, useState } from 'react';
import Balloon from './components/Balloon';
import confetti from 'canvas-confetti';
import { motion } from 'framer-motion';

interface BalloonData {
  id: number;
  color: string;
  left: string;
  delay: number;
  duration: number;
  size: number;
}

const App: React.FC = () => {
  // ‡∏≠‡πà‡∏≤‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å URL param ?name=...
  const [name, setName] = useState<string>('');
  // ‡∏•‡∏π‡∏Å‡πÇ‡∏õ‡πà‡∏á background
  const [balloons, setBalloons] = useState<BalloonData[]>([]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏•‡∏π‡∏Å‡πÇ‡∏õ‡πà‡∏á
  const generateBalloons = () => {
    // ‡πÇ‡∏ó‡∏ô‡∏™‡∏µ‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•‡∏´‡∏£‡∏∑‡∏≠ neutral ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    const colors = ['#F28AB2', '#A3D5FF', '#FFD8A8', '#C8FACC', '#E0E0E0'];
    const count = 10;
    const temp: BalloonData[] = Array.from({ length: count }).map((_, i) => {
      // ‡∏™‡∏∏‡πà‡∏° size: 30‚Äì60 px
      const size = Math.round(Math.random() * 30 + 30);
      // left: 10%‚Äì90%
      const left = `${Math.random() * 80 + 10}%`;
      // delay: 0‚Äì5s
      const delay = Math.random() * 5;
      // duration: 8‚Äì14s
      const duration = Math.random() * 6 + 8;
      // color: ‡∏ß‡∏ô‡∏ï‡∏≤‡∏° index ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡∏™‡∏∏‡πà‡∏°‡∏Å‡πá‡πÑ‡∏î‡πâ
      const color = colors[i % colors.length];
      return { id: i, color, left, delay, duration, size };
    });
    setBalloons(temp);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏¥‡∏á confetti ‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
  const celebrate = () => {
    generateBalloons();
    const duration = 1.2 * 1000;
    const end = Date.now() + duration;
    // ‡∏™‡∏µ confetti ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡πÇ‡∏ó‡∏ô minimal/pastel
    const colors = ['#BB86FC', '#03DAC5', '#CF6679', '#E0E0E0'];
    (function frame() {
      confetti({
        particleCount: 5,
        angle: 60,
        spread: 55,
        origin: { x: 0 },
        colors,
      });
      confetti({
        particleCount: 5,
        angle: 120,
        spread: 55,
        origin: { x: 1 },
        colors,
      });
      if (Date.now() < end) {
        requestAnimationFrame(frame);
      }
    })();
  };

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠ mount: ‡∏≠‡πà‡∏≤‡∏ô param name, ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡πÇ‡∏õ‡πà‡∏á ‡πÅ‡∏•‡∏∞‡∏¢‡∏¥‡∏á confetti ‡πÄ‡∏ö‡∏≤‡πÜ
  useEffect(() => {
    // ‡∏≠‡πà‡∏≤‡∏ô‡∏ä‡∏∑‡πà‡∏≠
    const params = new URLSearchParams(window.location.search);
    const nameParam = params.get('name')?.trim() || '';
    setName(nameParam);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡πÇ‡∏õ‡πà‡∏á background
    generateBalloons();

    // ‡∏¢‡∏¥‡∏á confetti ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πá comment ‡∏≠‡∏≠‡∏Å
    celebrate();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ fallback ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ nameParam: name === '' ‡∏Å‡πá‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á "Happy Birthday!" ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ

  return (
    <div className="relative min-h-screen bg-white flex items-center justify-center overflow-hidden p-4">
      {/* Canvas ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö confetti */}
      <canvas id="confetti-canvas"></canvas>

      {/* Background balloons */}
      {balloons.map((b) => (
        <Balloon
          key={b.id}
          color={b.color}
          left={b.left}
          delay={b.delay}
          duration={b.duration}
          size={b.size}
        />
      ))}

      {/* Card ‡∏Å‡∏•‡∏≤‡∏á */}
      <motion.div
        className="bg-white card-container p-6 max-w-sm w-full mx-auto text-center relative z-10"
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.4, ease: 'easeOut' }}
      >
        {/* Greeting */}
        <motion.h1
          className="subtle-gradient-text text-3xl sm:text-4xl md:text-5xl mb-2"
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2, duration: 0.5 }}
        >
          {name ? `Happy Birthday, ${name}!` : 'Happy Birthday!'}
        </motion.h1>

        {/* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏£‡∏¥‡∏° */}
        <motion.p
          className="text-gray-600 text-sm sm:text-base mb-4"
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.4, duration: 0.5 }}
        >
          Wishing you a day filled with joy and wonderful moments.
        </motion.p>

        {/* Cake SVG: colorful ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô */}
        <motion.div
          className="w-24 sm:w-28 md:w-32 mx-auto mb-4"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6, duration: 0.5 }}
        >
          {/* Cake SVG ‡πÅ‡∏ö‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏•‡πÄ‡∏¢‡∏≠‡∏£‡πå ‡∏™‡∏µ‡∏™‡∏±‡∏ô ‡πÅ‡∏•‡∏∞ sprinkles */}
          <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" className="w-full h-auto">
            <defs>
              {/* Gradient icing ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */}
              <linearGradient id="icingGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                <stop offset="0%" stopColor="#FFB6C1" />   {/* ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô */}
                <stop offset="100%" stopColor="#FF69B4" /> {/* ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡πÄ‡∏Ç‡πâ‡∏° */}
              </linearGradient>
              {/* Gradient middle layer */}
              <linearGradient id="middleGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                <stop offset="0%" stopColor="#FFFACD" />   {/* ‡∏™‡∏µ yellow-cream */}
                <stop offset="100%" stopColor="#FFEFD5" /> {/* pastel */}
              </linearGradient>
              {/* Gradient bottom layer */}
              <linearGradient id="bottomGrad" x1="0%" y1="0%" x2="0%" y2="100%">
                <stop offset="0%" stopColor="#E0FFFF" />   {/* pastel cyan */}
                <stop offset="100%" stopColor="#AFEEEE" /> {/* darker pastel */}
              </linearGradient>
              {/* Sprinkles gradients/colors */}
              <radialGradient id="sprinkleGrad1" cx="50%" cy="50%" r="50%">
                <stop offset="0%" stopColor="#FFD700" stopOpacity="1" />  {/* gold */}
                <stop offset="100%" stopColor="#FFD700" stopOpacity="0" />
              </radialGradient>
              <radialGradient id="sprinkleGrad2" cx="50%" cy="50%" r="50%">
                <stop offset="0%" stopColor="#ADFF2F" stopOpacity="1" />  {/* green-yellow */}
                <stop offset="100%" stopColor="#ADFF2F" stopOpacity="0" />
              </radialGradient>
              <radialGradient id="sprinkleGrad3" cx="50%" cy="50%" r="50%">
                <stop offset="0%" stopColor="#87CEFA" stopOpacity="1" />  {/* light sky blue */}
                <stop offset="100%" stopColor="#87CEFA" stopOpacity="0" />
              </radialGradient>
              <radialGradient id="sprinkleGrad4" cx="50%" cy="50%" r="50%">
                <stop offset="0%" stopColor="#FF69B4" stopOpacity="1" />  {/* hot pink */}
                <stop offset="100%" stopColor="#FF69B4" stopOpacity="0" />
              </radialGradient>
            </defs>
            {/* Bottom layer */}
            <rect x={8} y={34} width={48} height={14} rx={4} ry={4} fill="url(#bottomGrad)" stroke="#CCC" strokeWidth={1} />
            {/* Middle layer */}
            <rect x={12} y={26} width={40} height={12} rx={4} ry={4} fill="url(#middleGrad)" stroke="#BBB" strokeWidth={1} />
            {/* Icing/top layer */}
            <path
              d="M12 26
                 C14 18, 50 18, 52 26
                 L52 34
                 C50 32, 14 32, 12 34
                 Z"
              fill="url(#icingGrad)"
              stroke="#FF69B4"
              strokeWidth={1}
            />
            {/* Sprinkles: ‡∏ß‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏ö‡∏ô icing */}
            {[
              { cx: 20, cy: 24, grad: 'sprinkleGrad1', r: 1.5 },
              { cx: 30, cy: 22, grad: 'sprinkleGrad2', r: 1.5 },
              { cx: 40, cy: 24, grad: 'sprinkleGrad3', r: 1.5 },
              { cx: 25, cy: 28, grad: 'sprinkleGrad4', r: 1.5 },
              { cx: 35, cy: 27, grad: 'sprinkleGrad1', r: 1.5 },
              // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏∏‡∏î sprinkles ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            ].map((s, idx) => (
              <circle key={idx} cx={s.cx} cy={s.cy} r={s.r} fill={`url(#${s.grad})`} />
            ))}
            {/* Candles: ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏µ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏°‡∏Ç‡∏∂‡πâ‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏õ‡∏•‡∏ß‡πÑ‡∏ü */}
            {[...Array(3)].map((_, i) => {
              const x = 18 + i * 12;
              return (
                <g key={i}>
                  {/* ‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô */}
                  <rect x={x} y={12} width={4} height={12} fill="#FFD700" /> {/* ‡∏™‡∏µ‡∏ó‡∏≠‡∏á */}
                  {/* ‡πÄ‡∏õ‡∏•‡∏ß‡πÑ‡∏ü */}
                  <path
                    d={`
                      M${x + 2} 12
                      C${x + 3} 8, ${x - 1} 8, ${x + 2} 4
                      C${x + 5} 8, ${x + 1} 8, ${x + 2} 12
                    `}
                    fill="#FFA500"
                    className="animate-flicker-subtle"
                  />
                </g>
              );
            })}
          </svg>
        </motion.div>

        {/* ‡∏õ‡∏∏‡πà‡∏° Celebrate Again */}
        <motion.button
          onClick={celebrate}
          className="mt-4 px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg shadow transition"
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
        >
          üéâ Celebrate Again
        </motion.button>
      </motion.div>
    </div>
  );
};

export default App;
